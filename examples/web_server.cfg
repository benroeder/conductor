# Web Server Configuration
[Master]
player = 10.0.1.10          # Web server IP
conductor = 10.0.1.100      # Conductor IP
cmdport = 6970
resultsport = 6971

[Startup]
# Prepare the web server for testing
step1 = echo "Preparing web server for load test"
step2 = sudo systemctl restart nginx
step3 = sudo systemctl restart php-fpm
step4 = mkdir -p /tmp/load_test_results
step5 = echo "0" > /tmp/load_test_results/request_count.txt

[Run]
# Monitor server during test
spawn1 = vmstat 1 > /tmp/load_test_results/vmstat.log
spawn2 = iostat -x 1 > /tmp/load_test_results/iostat.log
spawn3 = top -b -d 1 > /tmp/load_test_results/top.log
spawn4 = tail -f /var/log/nginx/access.log | wc -l > /tmp/load_test_results/request_count.txt

# Check server health periodically
timeout5 = curl -f http://localhost/health || echo "Health check failed"

[Collect]
# Gather results and logs
step1 = echo "Collecting web server results"
step2 = sudo cp /var/log/nginx/error.log /tmp/load_test_results/
step3 = sudo cp /var/log/nginx/access.log /tmp/load_test_results/
step4 = ps aux > /tmp/load_test_results/processes.txt
step5 = free -m > /tmp/load_test_results/memory.txt
step6 = df -h > /tmp/load_test_results/disk.txt
step7 = tar -czf /tmp/web_server_results.tgz /tmp/load_test_results/

[Reset]
# Clean up after test
step1 = echo "Cleaning up web server"
step2 = sudo truncate -s 0 /var/log/nginx/access.log
step3 = sudo truncate -s 0 /var/log/nginx/error.log
step4 = rm -rf /tmp/load_test_results
step5 = echo "Web server reset complete"