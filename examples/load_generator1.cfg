# Load Generator 1 Configuration
[Coordinator]
player = 10.0.1.20          # Load generator 1 IP
conductor = 10.0.1.100      # Conductor IP
cmdport = 6970
resultsport = 6971

[Startup]
# Prepare load generator
step1 = echo "Load Generator 1: Preparing for test"
step2 = mkdir -p /tmp/loadgen1_results
step3 = which ab || sudo apt-get install -y apache2-utils
step4 = which curl || sudo apt-get install -y curl

[Run]
# Generate load - different types of requests
# Homepage load
timeout120 = ab -n 50000 -c 100 -g /tmp/loadgen1_results/homepage.tsv http://10.0.1.10/

# API endpoint load
timeout120 = ab -n 30000 -c 50 -g /tmp/loadgen1_results/api.tsv http://10.0.1.10/api/v1/status

# Mixed traffic simulation
spawn1 = while true; do curl -s http://10.0.1.10/search?q=test > /dev/null; sleep 0.1; done

# Heavy POST requests
timeout60 = ab -n 10000 -c 20 -p /tmp/post_data.txt -T application/json http://10.0.1.10/api/v1/data

[Collect]
# Gather load generator results
step1 = echo "Load Generator 1: Collecting results"
step2 = ps aux | grep -E "(ab|curl)" > /tmp/loadgen1_results/processes.txt
step3 = netstat -an | grep ESTABLISHED | wc -l > /tmp/loadgen1_results/connections.txt
step4 = tar -czf /tmp/loadgen1_results.tgz /tmp/loadgen1_results/

[Reset]
# Clean up load generator
step1 = echo "Load Generator 1: Cleaning up"
step2 = pkill -f "curl.*10.0.1.10" || true
step3 = rm -rf /tmp/loadgen1_results
step4 = echo "Load Generator 1: Reset complete"